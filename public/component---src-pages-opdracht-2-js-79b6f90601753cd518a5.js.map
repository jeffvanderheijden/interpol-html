{"version":3,"file":"component---src-pages-opdracht-2-js-79b6f90601753cd518a5.js","mappings":"sNAAA,EAAe,IAA0B,uDCAzC,EAAe,IAA0B,qDC8GzC,MAxGsB,KAClB,MAAMA,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAaD,EAAAA,EAAAA,QAAO,MACpBE,GAAaF,EAAAA,EAAAA,QAAO,MACpBG,GAAeH,EAAAA,EAAAA,QAAO,OAEtB,EAACI,EAAQ,EAACC,IAAcC,EAAAA,EAAAA,WAAS,IACjC,EAACC,EAAQ,EAACC,IAAcF,EAAAA,EAAAA,WAAS,IACjC,EAACG,EAAU,EAACC,IAAgBJ,EAAAA,EAAAA,WAAS,IACrC,EAACK,EAAc,EAACC,IAAoBN,EAAAA,EAAAA,WAAS,IAC7C,EAACO,EAAc,EAACC,IAAoBR,EAAAA,EAAAA,WAAS,GAE7CS,EAAW,WAWXC,EAAS,mDACUC,EAAQ,6DACVC,EAAM,0BAEvBC,EAAW,KACb,MAAMC,EAAarB,EAASsB,QAAQC,cAAcC,SAASC,qBAAqB,SAAS,GAAGC,UACtFC,EAAcN,EAAWO,SAAS,YAClCC,EAAcR,EAAWO,SAAS,YAClCE,EAAYH,GAAeE,EAC3BE,EAAcV,EAAWO,SAAS,QAClCI,EAAcX,EAAWO,SAAS,QAClCK,EAAYF,GAAeC,EAC3BE,EAAgBb,EAAWO,SAAS,OACpCO,EAAgBd,EAAWO,SAAS,QACpCQ,EAAcF,GAAiBC,EAG1B7B,IAAXwB,GACWrB,IAAXwB,GACatB,IAAbyB,GACIN,GAAYG,GAAYG,GACxBvB,GAAiB,GACjBE,GAAiB,GACjBsB,EAAAA,EAAaC,IAAI,cAAetB,GAChCuB,YAAW,KACPxB,GAAiB,EAAM,GACxB,OAEHF,GAAiB,GACjBE,GAAiB,GACrB,EA0BJ,OACI,gCACI,gBAACyB,EAAA,EAAM,CACHC,SApEE,kFAqEFC,QA7DC,gBA8DDzB,UAAWA,EACXjB,SAAUA,EACV2C,aAAcvB,EACdwB,YAAaxB,EACbyB,WAAYzB,EACZ0B,kBAAmB,QACnBC,oBAAqB,kBACrBC,iBAAkB,aAClBC,gBAAiB,QACjBC,YArCQ,IAChB,gCACI,yBAAG,iIAAiI,4BAoChIC,WAhCO,IACf,gCACI,uBAAKC,UAAU,QACX,yBAAOC,KAAK,WAAWC,UAAU,EAAMC,IAAKrD,EAAYsD,QAASnD,IACjE,yBAAG,8DAEP,uBAAK+C,UAAU,QACX,yBAAOC,KAAK,WAAWC,UAAU,EAAMC,IAAKpD,EAAYqD,QAAShD,IACjE,yBAAG,4EAEP,uBAAK4C,UAAU,QACX,yBAAOC,KAAK,WAAWC,UAAU,EAAMC,IAAKnD,EAAcoD,QAAS9C,IACnE,yBAAG,6EAqBH+C,eAlFW,CAAC,OAAQ,OAmFpB7C,cAAeA,EACfE,cAAeA,EACfE,SAAUA,IAEf,EAMJ,MAAM0C,EAAO,IAAM,6BAAO,a","sources":["webpack://javascript/./src/helpers/images/painting.png","webpack://javascript/./src/helpers/images/puzzle.png","webpack://javascript/./src/pages/opdracht-2.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/painting-5fe8e95db81eddb80442468154d28de0.png\";","export default __webpack_public_path__ + \"static/puzzle-85838249aae46ec58eb1774a34369d81.png\";","import React, { useState, useRef } from \"react\";\nimport Layout from \"../helpers/Layout\";\nimport LocalStorage from \"../helpers/LocalStorage\";\nimport painting from \"../helpers/images/painting.png\";\nimport puzzle from \"../helpers/images/puzzle.png\";\n\nconst Opdracht2Page = () => {\n    const frameRef = useRef(null);\n    const stepOneRef = useRef(null);\n    const stepTwoRef = useRef(null);\n    const stepThreeRef = useRef(null);\n\n    const [stepOne, setStepOne] = useState(false);\n    const [stepTwo, setStepTwo] = useState(false);\n    const [stepThree, setStepThree] = useState(false);\n    const [stepsComplete, setStepsComplete] = useState(false);\n    const [successScreen, setSuccessScreen] = useState(false);\n\n    const nextPage = \"/vraag-9\"; \n    const allowedEditors = ['html', 'css'];\n    const cssState = `/* CSS */\n.painting {\n    width: 300px;\n}\n\n.puzzle {\n    width: 149px;\n}`;\n    const jsState = `// JavaScript`;\n    const htmlState = `<!-- HTML -->\n<img class=\"painting\" src=\"${painting}\" alt=\"Painting by Da Vinci\" />\n<img class=\"puzzle\" src=\"${puzzle}\" alt=\"Puzzle piece\" />`;\n\n    const validate = () => {\n        const CSSToCheck = frameRef.current.contentWindow.document.getElementsByTagName('style')[0].innerHTML;\n        const checkOneOne = CSSToCheck.includes('position');\n        const checkOneTwo = CSSToCheck.includes('absolute');\n        const checkOne = (checkOneOne && checkOneTwo);\n        const checkTwoOne = CSSToCheck.includes('left');\n        const checkTwoTwo = CSSToCheck.includes('78px');\n        const checkTwo = (checkTwoOne && checkTwoTwo);\n        const checkThreeOne = CSSToCheck.includes('top');\n        const checkThreeTwo = CSSToCheck.includes('69px');\n        const checkThree = (checkThreeOne && checkThreeTwo);\n       \n        // Here we validate the output of the iframe\n        checkOne ? setStepOne(true) : setStepOne(false);\n        checkTwo ? setStepTwo(true) : setStepTwo(false);\n        checkThree ? setStepThree(true) : setStepThree(false);\n        if (checkOne && checkTwo && checkThree) {\n            setStepsComplete(true);\n            setSuccessScreen(true);\n            LocalStorage.set('currentPage', nextPage);\n            setTimeout(() => {\n                setSuccessScreen(false);\n            }, 2000);\n        } else {\n            setStepsComplete(false);\n            setSuccessScreen(false);\n        }\n    }\n\n    const explanation = () => (\n        <>\n            <p>Gebruik wat je hebt geleerd over positioning om het puzzelstuk hiernaast perfect over de rest van het schilderij te plaatsen.</p><br />            \n        </>\n    )\n\n    const assignment = () => (\n        <>\n            <div className=\"step\">\n                <input type=\"checkbox\" disabled={true} ref={stepOneRef} checked={stepOne} />\n                <p>In het CSS gedeelte, maak gebruik van de juiste position.</p>\n            </div>   \n            <div className=\"step\">\n                <input type=\"checkbox\" disabled={true} ref={stepTwoRef} checked={stepTwo} />\n                <p>Zorg ervoor dat het puzzelstuk de juiste pixel afstand heeft van links.</p>\n            </div>  \n            <div className=\"step\">\n                <input type=\"checkbox\" disabled={true} ref={stepThreeRef} checked={stepThree} />\n                <p>Zorg ervoor dat het puzzelstuk de juiste pixel afstand heeft van boven.</p>\n            </div>\n        </>\n    )\n\n    return (\n        <>\n            <Layout\n                cssState={cssState}\n                jsState={jsState}\n                htmlState={htmlState}\n                frameRef={frameRef}\n                validateHTML={validate}\n                validateCSS={validate}\n                validateJS={validate}\n                explanationTopBar={\"Leren\"}\n                explanationSubtitle={\"Introductie CSS\"}\n                explanationTitle={\"Opdracht 2\"}\n                explanationTime={\"5 min\"}\n                explanation={explanation}\n                assignment={assignment}\n                allowedEditors={allowedEditors}\n                stepsComplete={stepsComplete}\n                successScreen={successScreen}\n                nextPage={nextPage}\n            />\n        </>\n  )\n}\n\nexport default Opdracht2Page\n\nexport const Head = () => <title>Opdracht 2</title>\n"],"names":["frameRef","useRef","stepOneRef","stepTwoRef","stepThreeRef","stepOne","setStepOne","useState","stepTwo","setStepTwo","stepThree","setStepThree","stepsComplete","setStepsComplete","successScreen","setSuccessScreen","nextPage","htmlState","painting","puzzle","validate","CSSToCheck","current","contentWindow","document","getElementsByTagName","innerHTML","checkOneOne","includes","checkOneTwo","checkOne","checkTwoOne","checkTwoTwo","checkTwo","checkThreeOne","checkThreeTwo","checkThree","LocalStorage","set","setTimeout","Layout","cssState","jsState","validateHTML","validateCSS","validateJS","explanationTopBar","explanationSubtitle","explanationTitle","explanationTime","explanation","assignment","className","type","disabled","ref","checked","allowedEditors","Head"],"sourceRoot":""}