{"version":3,"file":"component---src-pages-hacked-js-16a352b7b0b60bdd077e.js","mappings":"qKAoGA,UAlGmB,KACf,MACMA,GAAmBC,EAAAA,EAAAA,QAAO,MAG1BC,EAAe,CACjB,6BACA,aACA,aACA,sCACA,eACA,mCACA,cACA,YACA,qBACA,0BACI,gBAGFC,EAAe,CACjB,iBACA,uBACA,UACA,cACA,uBACA,8BACA,kCAGEC,EAAmB,CACrB,eACA,gBACA,mBACA,mBACA,wBACA,4CACA,+BACA,6CACA,0BACA,mBACA,mCAGJ,IAAIC,GAAe,EACfC,EAAc,EACdC,EAAc,EAElB,MAAMC,EAAgB,KAClB,IAAIC,EAASC,SAASC,cAAc,KAEpC,GAAIN,EACAI,EAASC,SAASC,cAAc,QAChCF,EAAOG,aAAeC,KAAKC,SAAW,IACnCC,KAAKC,MAAQT,EAAcD,IAC1BD,GAAe,OAEhB,CAEH,UADuC,EAAhBQ,KAAKC,WAExB,KAAK,EACDL,EAAOG,YAAcV,KAAgBW,KAAKC,SAASZ,EAAae,SAAWd,KAAgBU,KAAKC,SAASX,EAAac,SACtH,MACJ,KAAK,EACDZ,GAAe,EACfC,KAA+B,IAAdO,KAAKC,UACtBP,EAAcQ,KAAKC,MACnB,MACJ,QACIP,EAAOG,YAAcR,KAAoBS,KAAKC,SAASV,EAAiBa,SAGpF,CAEA,GAAIjB,EAAiBkB,SAAWlB,EAAiBkB,QAAQC,aAAc,CAInE,GAHAnB,EAAiBkB,QAAQE,UAAYpB,EAAiBkB,QAAQC,aAC9DnB,EAAiBkB,QAAQG,YAAYZ,GAEjCT,EAAiBkB,QAAQC,aAAeG,OAAOC,YAAa,CAC5D,MAAMC,EAAcxB,EAAiBkB,QAAQO,iBAAiB,KAC9D,IAAK,IAAIC,EAAI,EAAGA,KAAOF,EAAYP,OAAS,GAAIS,IACxC1B,EAAiBkB,QAAQS,YAAYH,EAAYE,GAEzD,CACAE,WAAWpB,KAAgC,IAAdK,KAAKC,UACtC,GAOR,OAJAe,EAAAA,EAAAA,YAAU,KACNrB,GAAe,GAChB,CAACA,IAGA,uBAAKsB,GAAG,MAAMC,UAAU,UACpB,uBAAKA,UAAU,gBAAgBC,IAAKhC,IAClC,EAMP,MAAMiC,EAAO,IAAM,6BAAO,c","sources":["webpack://javascript/./src/pages/hacked.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nconst HackedPage = () => {\n    const nextPage = \"/vraag-11\"; \n    const outputConsoleRef = useRef(null);\n\n    /* fake console stuff */\n    const commandStart = [\n        'Performing DNS Lookups for', \n        'Searching ', \n        'Analyzing ', \n        'Estimating Approximate Location of ', \n        'Compressing ', \n        'Requesting Authorization From : ', \n        'wget -a -t ', \n        'tar -xzf ', \n        'Entering Location ', \n        'Compilation Started of ',\n            'Downloading '\n    ];\n\n    const commandParts = [\n        'Data Structure', \n        'http://wwjd.com?au&2', \n        'Texture', \n        'TPS Reports', \n        ' .... Searching ... ', \n        'http://zanb.se/?23&88&far=2', \n        'http://ab.ret45-33/?timing=1ww'\n    ];\n\n    const commandResponses = [\n        'Authorizing ', \n        'Authorized...', \n        'Access Granted..', \n        'Going Deeper....', \n        'Compression Complete.', \n        'Compilation of Data Structures Complete..', \n        'Entering Security Console...', \n        'Encryption Unsuccesful Attempting Retry...', \n        'Waiting for response...', \n        '....Searching...', \n        'Calculating Space Requirements '\n    ];\n\n    let isProcessing = false;\n    let processTime = 0;\n    let lastProcess = 0;\n\n    const consoleOutput = () => {\n        let textEl = document.createElement('p');\n        \n        if (isProcessing){\n            textEl = document.createElement('span');\n            textEl.textContent += Math.random() + \" \";\n            if(Date.now() > lastProcess + processTime) {\n                isProcessing = false;\n            }\n        } else {\n            const commandType = ~~(Math.random() * 4);\n            switch (commandType){\n                case 0:\n                    textEl.textContent = commandStart[~~(Math.random()*commandStart.length)] + commandParts[~~(Math.random()*commandParts.length)];\n                    break;\n                case 3: \n                    isProcessing = true;\n                    processTime = ~~(Math.random()*5000);\n                    lastProcess = Date.now();\n                    break;\n                default:\n                    textEl.textContent = commandResponses[~~(Math.random()*commandResponses.length)];\n                    break;\n            }\n        }\n    \n        if (outputConsoleRef.current && outputConsoleRef.current.scrollHeight) {\n            outputConsoleRef.current.scrollTop = outputConsoleRef.current.scrollHeight;\n            outputConsoleRef.current.appendChild(textEl);\n        \n            if (outputConsoleRef.current.scrollHeight > window.innerHeight) {\n                const removeNodes = outputConsoleRef.current.querySelectorAll('*');\n                for (var n = 0; n < ~~(removeNodes.length / 3); n++) {\n                        outputConsoleRef.current.removeChild(removeNodes[n]);\n                    }\n                }\n                setTimeout(consoleOutput, ~~(Math.random()*200));\n            }\n    }\n\n    useEffect(() => {\n        consoleOutput();\n    }, [consoleOutput]);\n\n    return (\n        <div id=\"App\" className=\"hacked\">\n            <div className=\"outputConsole\" ref={outputConsoleRef} />\n        </div>\n    )\n}\n\nexport default HackedPage;\n\nexport const Head = () => <title>Sudo ls -la</title>\n"],"names":["outputConsoleRef","useRef","commandStart","commandParts","commandResponses","isProcessing","processTime","lastProcess","consoleOutput","textEl","document","createElement","textContent","Math","random","Date","now","length","current","scrollHeight","scrollTop","appendChild","window","innerHeight","removeNodes","querySelectorAll","n","removeChild","setTimeout","useEffect","id","className","ref","Head"],"sourceRoot":""}