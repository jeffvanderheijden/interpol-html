{"version":3,"file":"component---src-pages-vraag-7-js-30ed91704184748c7289.js","mappings":"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","sources":["webpack://javascript/./src/pages/vraag-7.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Layout from \"../helpers/Layout\";\nimport Editor from '../components/Editor/Editor';\nimport LocalStorage from \"../helpers/LocalStorage\";\n\nconst Vraag7Page = () => {\n    const frameRef = useRef(null);\n    const stepOneRef = useRef(null);\n    const stepTwoRef = useRef(null);\n    const stepThreeRef = useRef(null);\n    const stepFourRef = useRef(null);\n    const stepFiveRef = useRef(null);\n\n    const [stepOne, setStepOne] = useState(false);\n    const [stepTwo, setStepTwo] = useState(false);\n    const [stepThree, setStepThree] = useState(false);\n    const [stepFour, setStepFour] = useState(false);\n    const [stepFive, setStepFive] = useState(false);\n    const [stepsComplete, setStepsComplete] = useState(false);\n    const [successScreen, setSuccessScreen] = useState(false);\n\n    const nextPage = \"/vraag-8\"; \n    const allowedEditors = ['html', 'css'];\n    const cssState = `/* CSS */\n* {\n    color: transparent;\n}`;\n    const jsState = `// JavaScript`;\n    const htmlState = `<!-- HTML -->\n<h1>Crypto hacker op GLR</h1>\n<h2>Studenten zitten hem op de hielen</h2>\n<p>De hacker is laatst gezien op de 5e verdieping van het GLR. Er wordt vermoed dat een leraar de dader is.</p>`;\n\n    const validate = () => {\n        const CSSToCheck = frameRef.current.contentWindow.document.getElementsByTagName('style')[0].innerHTML;\n        const checkOneOne = CSSToCheck.includes('body {') || CSSToCheck.includes('body{');\n        const checkOneTwo = CSSToCheck.includes('background') || CSSToCheck.includes('background-color');\n        const checkOneThree = CSSToCheck.includes('#333333') || CSSToCheck.includes('#333');\n        const checkOne = (checkOneOne && checkOneTwo && checkOneThree);\n        const checkTwoOne = CSSToCheck.includes('h1 {') || CSSToCheck.includes('h1{');\n        const checkTwoTwo = CSSToCheck.includes('color');\n        const checkTwoThree = CSSToCheck.includes('white') || CSSToCheck.includes('#FFFFFF') || CSSToCheck.includes('#FFF') || CSSToCheck.includes('rgb(255,255,255)');\n        const checkTwo = (checkTwoOne && checkTwoTwo && checkTwoThree);\n        const checkThreeOne = CSSToCheck.includes('h2 {') || CSSToCheck.includes('h2{');\n        const checkThreeTwo = CSSToCheck.includes('#E6E2DD');\n        const checkThree = (checkThreeOne && checkThreeTwo);\n        const checkFour = CSSToCheck.includes('#33CD4B');\n        const checkFiveOne = CSSToCheck.includes('p {') || CSSToCheck.includes('p{');\n        const checkFiveTwo = CSSToCheck.includes('#D4D4D4');\n        const checkFive = (checkFiveOne && checkFiveTwo);\n\n        // Here we validate the output of the iframe\n        checkOne ? setStepOne(true) : setStepOne(false);\n        checkTwo ? setStepTwo(true) : setStepTwo(false);\n        checkThree ? setStepThree(true) : setStepThree(false);\n        checkFour ? setStepFour(true) : setStepFour(false);\n        checkFive ? setStepFive(true) : setStepFive(false);\n        if (checkOne && checkTwo && checkThree && checkFour && checkFive) {\n            setStepsComplete(true);\n            setSuccessScreen(true);\n            LocalStorage.set('currentPage', nextPage);\n            setTimeout(() => {\n                setSuccessScreen(false);\n            }, 2000);\n        } else {\n            setStepsComplete(false);\n            setSuccessScreen(false);\n        }\n    }\n\n    const explanation = () => (\n        <>\n            <p>Om je pagina wat te verfraaien, kun je kleuren toevoegen. Je kunt de tekstkleur aanpassen maar ook de achtergrondkleur. Dit doe je allemaal in CSS.</p><br /><br />\n            <h3>Tekstkleur</h3><br />\n            <p>Om tekstkleur te wijzigen, selecteren we eerst het HTML element waarop we de kleur willen toepassen. (In dit geval een <code>&lt;p&gt;</code> element). Daarna defineren we de color property zoals:</p><br />            \n            <Editor\n                type={'assignment'}\n                language=\"css\"\n                readOnly={true}\n                lineWrapping={true}\n                value={`p {\n    color: #0000ff;\n}`}\n            /><br /><br />\n            <h3>Achtergrondkleur</h3><br />\n            <p>Om een element een achtergrondkleur te geven, (in dit voorbeeld het <code>&lt;body&gt;</code> element) gebruiken we de background-color property:</p><br />\n            <Editor\n                type={'assignment'}\n                language=\"css\"\n                readOnly={true}\n                lineWrapping={true}\n                value={`body {\n    background-color: #00ff00;\n}`}\n            /><br /><br />\n            <h3>Kleuren defineren in CSS</h3><br />\n            <p>Je kunt kleuren op 3 manieren schrijven.</p><br />\n            <ul> \n                <li>gewoon als Engelstalige tekst (white)</li>\n                <li>In HEX-code (hexadecimaal: #FFFFFF)</li>\n                <li>In RGB-code (rood-groen-blauw waarde: (255,255,255))</li>\n            </ul>\n            <p>Voor wit kun je bijvoorbeeld schrijven:</p><br />\n            <Editor\n                type={'assignment'}\n                language=\"css\"\n                readOnly={true}\n                lineWrapping={true}\n                value={`p {\n    color: white;\n}\n\np {\n    color: #FFFFFF;\n}\n\np {\n    color: rgb(255,255,255);\n}`} /><br />\n            <p>Dit betekent in alle drie de gevallen dat de kleur wit moet zijn. Je zult ze alledrie tegen komen tijdens je werk als developer.</p><br />\n        </> \n    )\n\n    const assignment = () => (\n        <>\n            <p>Open het styles.css in je editor en wijzig een aantal eigenschappen in dit document:</p>\n            <div className=\"step\">\n                <input type=\"checkbox\" disabled={true} ref={stepOneRef} checked={stepOne} />\n                <p>De achtergrondkleur van de hele pagina (de body) moet #333333 worden.</p>\n            </div>\n            <div className=\"step\">\n                <input type=\"checkbox\" disabled={true} ref={stepTwoRef} checked={stepTwo} />\n                <p>De tekstkleur van heading 1 moet wit worden.</p>\n            </div>\n            <div className=\"step\">\n                <input type=\"checkbox\" disabled={true} ref={stepThreeRef} checked={stepThree} />\n                <p>De achtergrondkleur van heading 2 moet #E6E2DD worden.</p>\n            </div>\n            <div className=\"step\">\n                <input type=\"checkbox\" disabled={true} ref={stepFourRef} checked={stepFour} />\n                <p>De tekstkleur van heading 2 moet #33CD4B worden.</p>\n            </div>\n            <div className=\"step\">\n                <input type=\"checkbox\" disabled={true} ref={stepFiveRef} checked={stepFive} />\n                <p>De tekstkleur van de paragrafen moet #D4D4D4 worden.</p>\n            </div>            \n        </>\n    )\n\n    return (\n        <>\n            <Layout\n                cssState={cssState}\n                jsState={jsState}\n                htmlState={htmlState}\n                frameRef={frameRef}\n                validateHTML={validate}\n                validateCSS={validate}\n                validateJS={validate}\n                explanationTopBar={\"Leren\"}\n                explanationSubtitle={\"Introductie CSS\"}\n                explanationTitle={\"Kleur & achtergrondkleur\"}\n                explanationTime={\"5 min\"}\n                explanation={explanation}\n                assignment={assignment}\n                allowedEditors={allowedEditors}\n                stepsComplete={stepsComplete}\n                successScreen={successScreen}\n                nextPage={nextPage}\n            />\n        </>\n  )\n}\n\nexport default Vraag7Page\n\nexport const Head = () => <title>Vraag 7</title>\n"],"names":["frameRef","useRef","stepOneRef","stepTwoRef","stepThreeRef","stepFourRef","stepFiveRef","stepOne","setStepOne","useState","stepTwo","setStepTwo","stepThree","setStepThree","stepFour","setStepFour","stepFive","setStepFive","stepsComplete","setStepsComplete","successScreen","setSuccessScreen","nextPage","validate","CSSToCheck","current","contentWindow","document","getElementsByTagName","innerHTML","checkOneOne","includes","checkOneTwo","checkOneThree","checkOne","checkTwoOne","checkTwoTwo","checkTwoThree","checkTwo","checkThreeOne","checkThreeTwo","checkThree","checkFour","checkFiveOne","checkFiveTwo","checkFive","LocalStorage","set","setTimeout","cssState","jsState","htmlState","validateHTML","validateCSS","validateJS","explanationTopBar","explanationSubtitle","explanationTitle","explanationTime","explanation","type","language","readOnly","lineWrapping","value","assignment","className","disabled","ref","checked","allowedEditors","Head"],"sourceRoot":""}